#!/usr/bin/env ruby
# coding: utf-8
#
# name:      vimenv
# author:    Xu Xiaodong <xxdlhy@gmail.com>
# license:   GPL
# created:   2012 Apr 14
# modified:  2012 Apr 17
#

require 'fileutils'
require 'optparse'

def init
  conf = %w[vimrc vim]
  conf.each do |item|
    orig = Dir.pwd + '/_' + item
    target = Dir.home + '/.' + item
    bak = target + '.bak'

    if File.exist?(target) && ! File.symlink?(target)
      puts "Backuping #{target} to #{bak}"
      FileUtils.mv(target, bak)
    end

    if File.symlink?(target)
      FileUtils.rm(target)
    end

    puts "Symlinking #{orig} to #{target}"
    FileUtils.symlink(orig, target, force: true)
  end
end

def edit
  puts "Editing Vim configuration file"
  system "vim _vimrc"
end

def add(name)
  src = 'git://github.com/vim-scripts/' + name + '.git'
  desc = 'bundle/' + name

  puts "Adding #{src} to #{desc}"
  system "git submodule add #{src} #{desc}"
end

def remove(name)
  path = 'bundle/' + name
  files = [".git/config", ".gitmodules"]

  puts "Removing #{path}"
  system "git rm --cached #{path} >/dev/null"

  files.each do |file|
    system "git config -f #{file} --remove-section submodule.#{path}"
  end

  FileUtils.rmtree(path)
end

def update
  puts "Updating Vim plugins"

  arg = ["init", "update", "foreach git pull origin master"]

  arg.each do |elt|
    system "git submodule #{elt}"
  end
end

def list
  bundle = Dir.entries('bundle')
  plugins = bundle[2, bundle.size].sort

  plugins.each { |name| puts "Installed #{name}" }

  total = plugins.size
  puts "Total #{total} plugins"
end

opts = OptionParser.new
opts.on("-i", "--init", "Initialize Vim environment") { init }
opts.on("-e", "--edit", "Edit Vim configuration file") { edit }
opts.on("-a", "--add NAME", "Add Vim plugins") { |name| add(name) }
opts.on("-r", "--remove NAME", "Remove Vim plugins") { |name| remove(name) }
opts.on("-u", "--update", "Update Vim plugins") { update }
opts.on("-l", "--list", "List Vim plugins") { list }
opts.on("-h", "--help", "Show help") { puts opts.to_s }

if ARGV.empty?
  puts opts.to_s
else
  opts.parse(*ARGV)
end

# vim: ai:et:ts=2:sw=2:sts=2:tw=78:ft=ruby
